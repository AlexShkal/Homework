# Задачи для домашней работы
# Создайте список ['a', 'b', 'c'] и сделайте из него кортеж.
lst = ['a', 'b', 'c']
tpl = tuple(lst)

# Создайте кортеж ('a', 'b', 'c'), И сделайте из него список.
tpl = 'a', 'b', 'c'
lst = list(tpl)

# Сделайте следующие присвоения одной строкой a = 'a', b=2, c=’python’.
a, b, c = 'a', 2, 'python'

# Создайте кортеж из одного элемента,
# чтобы при итерировании по этому элементу последовательно выводились значения 1, 2, 3.
# Убедитесь что len() исходного кортежа возвращает 1.
tpl = (1, 2, 3),
print(len(tpl))
for i in tpl[0]:
    print(i, end=' ')

# Даны два натуральных числа.
# Вычислите их наибольший общий делитель при помощи алгоритма Евклида (мы не знаем функции и рекурсию).
a, b = map(int, input().split())
while b > 0:
    a, b = b, a % b
print(a)

# Задачи для домашней работы
# *Города*
# Дан список стран и городов каждой страны. Затем даны названия городов.
# Для каждого города укажите, в какой стране он находится.
# Учтите, что бывают ситуации когда город с таким называнием бывает в разных странах (Брест есть в Беларуси и Франции).

cities_countries = {}
for _ in range(int(input())):
    country, *cities = input().split()
    for city in cities:
        cities_countries.setdefault(city, []).append(country)
for _ in range(int(input())):
    print(*cities_countries[input()])

# Во входной строке записан текст.
# Словом считается последовательность непробельных символов идущих подряд,
# слова разделены одним или большим числом пробелов или символами конца строки.
# Определите, сколько различных слов содержится в этом тексте.

print(len(set(s.split())))

# Задачи для домашней работы
# Во входной строке записан текст.
# Словом считается последовательность непробельных символов идущих подряд,
# слова разделены одним или большим числом пробелов или символами конца строки.
# Определите, сколько различных слов содержится в этом тексте.

print(len(set(s.split())))

# Даны два списка чисел.
# Посчитайте, сколько различных чисел содержится одновременно как в первом списке, так и во втором.

print(len(set(lst) ^ set(lst1)))

# Даны два списка чисел. Посчитайте, сколько различных чисел входит только в один из этих списков.

print(len(set(lst) - set(lst1)))

# *Языки*
# Каждый из N школьников некоторой школы знает Mi языков.
# Определите, какие языки знают все школьники и языки, которые знает хотя бы один из школьников.
# Входные данные
# Первая строка входных данных содержит количество школьников N.
# Далее идет N чисел Mi, после каждого из чисел идет Mi строк, содержащих названия языков, которые знает i-й школьник.
# Пример входных данных:
# 3 # N количество школьников
# 2 # M1 количество языков первого школьника
# Russian # языки первого школьника
# English
# 3 # M2 количество языков второго школьника
# Russian
# Belarusian
# English
# 3
# Russian
# Italian
# French
# *Выходные данные*
# В первой строке выведите количество языков, которые знают все школьники.
# Начиная со второй строки - список таких языков.
# Затем - количество языков, которые знает хотя бы один школьник, на следующих строках - список таких языков.
n = int(input('enter number of students:'))
languages = []
for i in range(n):
    m = int(input('Введите кол-во языков школьников:'))
    langs = []
    for j in range(m):
        langs.append(input('Введите список языков школьников:'))
    languages.append(set(langs))

all_langs = languages[0]
any_langs = languages[0]
for lang_set in languages[1:]:
    all_langs &= lang_set
    all_langs |= lang_set

print('Колво языков которые знают все школьники:', len(all_langs))
print(all_langs)
print('Кол-во языков которые знает хотя бы один школьник:', len(any_langs))
print(any_langs)

# Используйте генератор списков чтобы получить следующий: ['xy', 'xz', 'xv', 'yy', 'yz', 'yv']
a = [i + j for i in ['x', 'y'] for j in ['y', 'z', 'v']]

# Используйте на предыдущий список slice чтобы получить следующий: ['xy', 'xv', 'yz']
b = a[::2]

# Используйте генератор списков чтобы получить следующий ['1x', '2x', '3x', '4x']
c = [str(i) + 'x' for i in range(1, 5)]

# Одной строкой (и одним выражением) удалите элемент '2x' из прошлого списка и напечатайте его.
print(c.pop(c.index('2x')))

# Скопируйте список и добавьте в него элемент 2x так чтобы в исходном списке этого элемента не было.
c_copy = c + ['2x']

# Создайте словарь с помощью генератора словарей, так чтобы его ключами были числа от 1 до 20,
# а значениями кубы этих чисел.
dct = {i: i ** 3 for i in range(1, 21)}

# Создайте множество с помощью генератора множеств, состоящее из общих делителей чисел 1000 и 9000.
s = {i for i in range(1, 1001) if 1000 % i == 0 and 9000 % i == 0}

# Создайте генератр, который возвращает строки таблицы умножения от 0 до заданного числа.
# Пример для числа 3:
#    0  0  0  0
#    0	1  2  3
#    0	2  4  6
#    0	3  6  9

def multiplication_table(d):
    for i in range(d + 1):
        row = [str(i * j) for j in range(d + 1)]
        yield "\t".join(row)